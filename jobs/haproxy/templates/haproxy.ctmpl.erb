global
    log 127.0.0.1   syslog info
    daemon
    user vcap
    group vcap
    maxconn 64000
    spread-checks 4
    tune.bufsize <%= p("ha_proxy.buffer_size_bytes") %>
    <% if p("ha_proxy.enable_stats_socket") %>
    stats socket /var/vcap/sys/run/haproxy/stats
    <% end %>

defaults
    log global
    timeout connect 30000ms
    maxconn 64000
    <% if p("request_timeout_in_seconds").to_i > 0 %>
    timeout client <%= p("request_timeout_in_seconds").to_i * 1000 %>ms
    timeout server <%= p("request_timeout_in_seconds").to_i * 1000 %>ms
    <% end %>
    <% if p("ha_proxy.dontlognull") %>
    option dontlognull
    <% end %>

<% if_p("ha_proxy.enable_proxy_protocol") do %>
frontend http-proxy-protocol-in
    mode http
    bind :81 accept-proxy
    capture request header Host len 128
    option httplog
    option forwardfor
    # dst_port will be replaced by the value from Proxy Protocol header.
    acl is-ssl  dst_port       443
    reqidel ^X-Forwarded-Proto:.*
    reqadd X-Forwarded-Proto:\ http if ! is-ssl
    reqadd X-Forwarded-Proto:\ https if is-ssl
    default_backend http-routers
<% if_p("ha_proxy.additional_frontend_config") do |additional_config| %>
<%= additional_config.split("\n").map{|x| "    #{x}"}.join("\n") %>
<% end %>
<% end %>

<% unless p("ha_proxy.disable_http") %>
frontend http-in
    mode http
    bind :80
    capture request header Host len 128
    option httplog
    option forwardfor
    reqidel ^X-Forwarded-Proto:.*
    reqadd X-Forwarded-Proto:\ http
    default_backend http-routers
<% if_p("ha_proxy.additional_frontend_config") do |additional_config| %>
<%= additional_config.split("\n").map{|x| "    #{x}"}.join("\n") %>
<% end %>
<% end %>

<% if p("ha_proxy.ssl_pem") %>
# To implement ELB+SSL+ProxyProtocol, we had to split this frontend in two
# parts because HAProxy expects the ProxyProtocol header outside of the
# SSL stream, meanwhile ELB sends it inside. The two configurations are:
#
#  * A plain TCP+SSL listener to do the SSL termination, and sends to...
#  * ...a HTTP frontend which will parse the proxy protocol header.
#
# More info here: https://serverfault.com/questions/775010/aws-elb-with-ssl-backend-adds-proxy-protocol-inside-ssl-stream
listen https-in
    mode tcp
    option splice-auto
    bind :443 ssl crt /var/vcap/jobs/haproxy/config/cert.pem no-sslv3 ciphers <%= p("ha_proxy.ssl_ciphers") %>
    capture request header Host len 128
    server http-proxy-protocol-in 127.0.0.1:81
<% end %>

<% if p("ha_proxy.enable_healthcheck_frontend") %>
frontend healthcheck
    mode http
    bind :82
    option httplog
    reqidel ^User-Agent:.*
    reqadd User-Agent:\ HTTP-Monitor/1.1
    default_backend http-routers
<% end %>

backend http-routers
    mode http
    balance roundrobin

    <% p("ha_proxy.go_router.servers").each_with_index do |ip, index| %>
        server node<%= index %> <%= ip %>:<%= p("ha_proxy.go_router.port") %> check inter 1000
    <% end %>

backend tcp-routers
    mode tcp
    balance roundrobin

    <% p("ha_proxy.go_router.servers").each_with_index do |ip, index| %>
        server node<%= index %> <%= ip %>:<%= p("ha_proxy.go_router.port") %> check inter 1000
    <% end %>
